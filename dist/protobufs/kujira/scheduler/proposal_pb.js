// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file kujira/scheduler/proposal.proto (package kujira.scheduler, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Coin } from "../../cosmos/base/v1beta1/coin_pb.js";
/**
 * @generated from message kujira.scheduler.CreateHookProposal
 */
export class CreateHookProposal extends Message {
    constructor(data) {
        super();
        /**
         * Title is a short summary
         *
         * @generated from field: string title = 1;
         */
        this.title = "";
        /**
         * Description is a human readable text
         *
         * @generated from field: string description = 2;
         */
        this.description = "";
        /**
         * The account that will execute the msg on the schedule
         *
         * @generated from field: string executor = 3;
         */
        this.executor = "";
        /**
         * The contract that the msg is called on
         *
         * @generated from field: string contract = 4;
         */
        this.contract = "";
        /**
         * @generated from field: bytes msg = 5;
         */
        this.msg = new Uint8Array(0);
        /**
         * @generated from field: int64 frequency = 6;
         */
        this.frequency = protoInt64.zero;
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin funds = 7;
         */
        this.funds = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateHookProposal().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateHookProposal().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateHookProposal().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateHookProposal, a, b);
    }
}
CreateHookProposal.runtime = proto3;
CreateHookProposal.typeName = "kujira.scheduler.CreateHookProposal";
CreateHookProposal.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "executor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "msg", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "frequency", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "funds", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message kujira.scheduler.UpdateHookProposal
 */
export class UpdateHookProposal extends Message {
    constructor(data) {
        super();
        /**
         * Title is a short summary
         *
         * @generated from field: string title = 1;
         */
        this.title = "";
        /**
         * Description is a human readable text
         *
         * @generated from field: string description = 2;
         */
        this.description = "";
        /**
         * @generated from field: uint64 id = 3;
         */
        this.id = protoInt64.zero;
        /**
         * @generated from field: string executor = 4;
         */
        this.executor = "";
        /**
         * @generated from field: string contract = 5;
         */
        this.contract = "";
        /**
         * @generated from field: bytes msg = 6;
         */
        this.msg = new Uint8Array(0);
        /**
         * @generated from field: int64 frequency = 7;
         */
        this.frequency = protoInt64.zero;
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin funds = 8;
         */
        this.funds = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UpdateHookProposal().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UpdateHookProposal().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UpdateHookProposal().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(UpdateHookProposal, a, b);
    }
}
UpdateHookProposal.runtime = proto3;
UpdateHookProposal.typeName = "kujira.scheduler.UpdateHookProposal";
UpdateHookProposal.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "executor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "msg", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "frequency", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "funds", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message kujira.scheduler.DeleteHookProposal
 */
export class DeleteHookProposal extends Message {
    constructor(data) {
        super();
        /**
         * Title is a short summary
         *
         * @generated from field: string title = 1;
         */
        this.title = "";
        /**
         * Description is a human readable text
         *
         * @generated from field: string description = 2;
         */
        this.description = "";
        /**
         * @generated from field: uint64 id = 3;
         */
        this.id = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DeleteHookProposal().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteHookProposal().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteHookProposal().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteHookProposal, a, b);
    }
}
DeleteHookProposal.runtime = proto3;
DeleteHookProposal.typeName = "kujira.scheduler.DeleteHookProposal";
DeleteHookProposal.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
//# sourceMappingURL=proposal_pb.js.map