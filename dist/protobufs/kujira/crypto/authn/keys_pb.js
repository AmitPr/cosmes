// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file kujira/crypto/authn/keys.proto (package kujira.crypto.authn, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * PubKey defines a authn public key
 *
 * @generated from message kujira.crypto.authn.PubKey
 */
export class PubKey extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string key_id = 1;
         */
        this.keyId = "";
        /**
         * @generated from field: bytes key = 2;
         */
        this.key = new Uint8Array(0);
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PubKey().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PubKey().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PubKey().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PubKey, a, b);
    }
}
PubKey.runtime = proto3;
PubKey.typeName = "kujira.crypto.authn.PubKey";
PubKey.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
//# sourceMappingURL=keys_pb.js.map