// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file batch/tx.proto (package batch, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Coin } from "../cosmos/base/v1beta1/coin_pb.js";

/**
 * MsgWithdrawAllDelegatorRewards represents delegation withdrawal to a delegator
 * from all staked validators.
 *
 * @generated from message batch.MsgWithdrawAllDelegatorRewards
 */
export class MsgWithdrawAllDelegatorRewards extends Message<MsgWithdrawAllDelegatorRewards> {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress = "";

  constructor(data?: PartialMessage<MsgWithdrawAllDelegatorRewards>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "batch.MsgWithdrawAllDelegatorRewards";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgWithdrawAllDelegatorRewards {
    return new MsgWithdrawAllDelegatorRewards().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgWithdrawAllDelegatorRewards {
    return new MsgWithdrawAllDelegatorRewards().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgWithdrawAllDelegatorRewards {
    return new MsgWithdrawAllDelegatorRewards().fromJsonString(jsonString, options);
  }

  static equals(a: MsgWithdrawAllDelegatorRewards | PlainMessage<MsgWithdrawAllDelegatorRewards> | undefined, b: MsgWithdrawAllDelegatorRewards | PlainMessage<MsgWithdrawAllDelegatorRewards> | undefined): boolean {
    return proto3.util.equals(MsgWithdrawAllDelegatorRewards, a, b);
  }
}

/**
 * MsgWithdrawAllDelegatorRewardsResponse defines the Msg/WithdrawAllDelegatorRewards response type.
 *
 * @generated from message batch.MsgWithdrawAllDelegatorRewardsResponse
 */
export class MsgWithdrawAllDelegatorRewardsResponse extends Message<MsgWithdrawAllDelegatorRewardsResponse> {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount: Coin[] = [];

  constructor(data?: PartialMessage<MsgWithdrawAllDelegatorRewardsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "batch.MsgWithdrawAllDelegatorRewardsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "amount", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgWithdrawAllDelegatorRewardsResponse {
    return new MsgWithdrawAllDelegatorRewardsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgWithdrawAllDelegatorRewardsResponse {
    return new MsgWithdrawAllDelegatorRewardsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgWithdrawAllDelegatorRewardsResponse {
    return new MsgWithdrawAllDelegatorRewardsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgWithdrawAllDelegatorRewardsResponse | PlainMessage<MsgWithdrawAllDelegatorRewardsResponse> | undefined, b: MsgWithdrawAllDelegatorRewardsResponse | PlainMessage<MsgWithdrawAllDelegatorRewardsResponse> | undefined): boolean {
    return proto3.util.equals(MsgWithdrawAllDelegatorRewardsResponse, a, b);
  }
}

/**
 * @generated from message batch.MsgBatchResetDelegation
 */
export class MsgBatchResetDelegation extends Message<MsgBatchResetDelegation> {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress = "";

  /**
   * @generated from field: repeated string validators = 2;
   */
  validators: string[] = [];

  /**
   * @generated from field: repeated string amounts = 3;
   */
  amounts: string[] = [];

  constructor(data?: PartialMessage<MsgBatchResetDelegation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "batch.MsgBatchResetDelegation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validators", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "amounts", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgBatchResetDelegation {
    return new MsgBatchResetDelegation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgBatchResetDelegation {
    return new MsgBatchResetDelegation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgBatchResetDelegation {
    return new MsgBatchResetDelegation().fromJsonString(jsonString, options);
  }

  static equals(a: MsgBatchResetDelegation | PlainMessage<MsgBatchResetDelegation> | undefined, b: MsgBatchResetDelegation | PlainMessage<MsgBatchResetDelegation> | undefined): boolean {
    return proto3.util.equals(MsgBatchResetDelegation, a, b);
  }
}

/**
 * @generated from message batch.MsgBatchResetDelegationResponse
 */
export class MsgBatchResetDelegationResponse extends Message<MsgBatchResetDelegationResponse> {
  constructor(data?: PartialMessage<MsgBatchResetDelegationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "batch.MsgBatchResetDelegationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgBatchResetDelegationResponse {
    return new MsgBatchResetDelegationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgBatchResetDelegationResponse {
    return new MsgBatchResetDelegationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgBatchResetDelegationResponse {
    return new MsgBatchResetDelegationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgBatchResetDelegationResponse | PlainMessage<MsgBatchResetDelegationResponse> | undefined, b: MsgBatchResetDelegationResponse | PlainMessage<MsgBatchResetDelegationResponse> | undefined): boolean {
    return proto3.util.equals(MsgBatchResetDelegationResponse, a, b);
  }
}

